<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0">
  <constants>
  </constants>
  <classes>
    <class id="OnCall" _delta="define">
      <parent>FunctionalCI</parent>
      <properties>
        <category>bizmodel,searchable,structure</category>
        <abstract>false</abstract>
        <key_type>autoincrement</key_type>
        <db_table>oncall</db_table>
        <db_key_field>id</db_key_field>
        <db_final_class_field/>
        <display_template/>
        <reconciliation>
          <attributes>
            <attribute id="name"/>
            <attribute id="org_id"/>
          </attributes>
        </reconciliation>
      </properties>
      <fields>
        <field id="day" xsi:type="AttributeDate">
          <sql>day</sql>
          <default_value/>
          <is_null_allowed>false</is_null_allowed>
        </field>
	<field id="repeat_until_end_of" xsi:type="AttributeDate">
          <sql>repeat_until_end_of</sql>
          <default_value/>
          <is_null_allowed>false</is_null_allowed>
        </field>
	<field id="start_time" xsi:type="AttributeDateTime">
          <sql>start_time</sql>
          <default_value/>
          <is_null_allowed>false</is_null_allowed>
        </field>
	<field id="end_time" xsi:type="AttributeDateTime">
          <sql>end_time</sql>
          <default_value/>
          <is_null_allowed>false</is_null_allowed>
        </field>
	<field id="person_external_id" xsi:type="AttributeExternalKey">
          <sql>person_external_id</sql>
          <is_null_allowed>false</is_null_allowed>
          <on_target_delete>DEL_MANUAL</on_target_delete>
          <target_class>Person</target_class>
          <display_style>select</display_style>
        </field>
	<field id="contact_last_name" xsi:type="AttributeExternalField">
          <extkey_attcode>person_external_id</extkey_attcode>
          <target_attcode>name</target_attcode>
        </field>
	<field id="contact_first_name" xsi:type="AttributeExternalField">
          <extkey_attcode>person_external_id</extkey_attcode>
          <target_attcode>first_name</target_attcode>
        </field>
        <field id="number" xsi:type="AttributeExternalField">
          <extkey_attcode>person_external_id</extkey_attcode>
          <target_attcode>phone</target_attcode>
        </field>
	<field id="email" xsi:type="AttributeExternalField">
          <extkey_attcode>person_external_id</extkey_attcode>
          <target_attcode>email</target_attcode>
        </field>
	<field id="type" xsi:type="AttributeEnum">
          <sql>type</sql>
          <is_null_allowed>false</is_null_allowed>
		  <values>
		    <value id="primary">Primary</value>
		    <value id="backup">Backup</value>
		    <value id="manager">Manager</value>
		  </values>
          <default_value>Primary</default_value>
        </field>
      </fields>
      <methods>
	<method id="DoCheckToWrite" _delta="define">
	  <static>false</static>
	  <access>public</access>
	  <code><![CDATA[
public function DoCheckToWrite(){
    parent::DoCheckToWrite();

    if(MetaModel::IsValidAttCode(get_class($this), 'day')
        && MetaModel::IsValidAttCode(get_class($this), 'repeat_until_end_of')
        && (AttributeDateTime::GetAsUnixSeconds($this->Get('day'))
            > AttributeDateTime::GetAsUnixSeconds($this->Get('repeat_until_end_of'))
        )
    ){
        $this->m_aCheckIssues[] = Dict::Format('Class:Error:RepeatUntilEndOfMustBeGreaterThanDay');
    }

    if(MetaModel::IsValidAttCode(get_class($this), 'start_time')
        && MetaModel::IsValidAttCode(get_class($this), 'end_time')
    ){
        if(AttributeDateTime::GetAsUnixSeconds($this->Get('start_time'))
            > AttributeDateTime::GetAsUnixSeconds($this->Get('end_time'))
        ){
	    $this->m_aCheckIssues[] = Dict::Format('Class:Error:EndTimeMustBeGreaterThanStartTime');
	}elseif(date("z-Y", AttributeDateTime::GetAsUnixSeconds($this->Get('start_time')))
	    <> date("z-Y", AttributeDateTime::GetAsUnixSeconds($this->Get('end_time')))
	){
	    $this->m_aCheckIssues[] = Dict::Format('Class:Error:StartTimeMustBeSameTimeAsEndTime');
	}
    }

    $id = $this->Get('person_external_id');
    if(!is_null($id) && $id != 0){
        $oPerson = MetaModel::GetObject('Person', $id, false);

        $this->Set('name',$oPerson->Get('first_name').' '.$oPerson->Get('name'));
        $this->Set('org_id',$oPerson->Get('org_id'));
    }
}
]]></code>
	</method>
      </methods>
      <!-- <relations> -->
      <!-- 	<relation id="impacts"> -->
      <!-- 	  <neighbours> -->
      <!-- 	    <neighbour id=""> -->
	      
      <!-- 	    </neighbour> -->
      <!-- 	  </neighbours> -->
      <!-- 	</relation> -->
      <!-- </relations> -->
      <presentation>
        <details>
          <items>
            <item id="person_external_id">
              <rank>1</rank>
            </item>
            <item id="contact_last_name">
              <rank>2</rank>
            </item>
            <item id="contact_first_name">
              <rank>3</rank>
            </item>
            <item id="number">
              <rank>4</rank>
            </item>
	    <item id="email">
              <rank>5</rank>
            </item>
            <item id="day">
              <rank>10</rank>
            </item>
           <item id="repeat_until_end_of">
              <rank>11</rank>
           </item>
	   <item id="start_time">
              <rank>12</rank>
           </item>
	   <item id="end_time">
              <rank>13</rank>
           </item>
            <item id="type">
              <rank>40</rank>
            </item>
          </items>
        </details>
        <search>
          <items>
            <item id="name">
              <rank>8</rank>
            </item>
            <item id="org_id">
              <rank>9</rank>
            </item>
            <item id="day">
              <rank>10</rank>
            </item>
	    <item id="repeat_until_end_of">
              <rank>15</rank>
            </item>
	    <item id="start_time">
              <rank>16</rank>
            </item>
	    <item id="end_time">
              <rank>17</rank>
            </item>
            <item id="contact_last_name">
              <rank>18</rank>
            </item>
            <item id="contact_first_name">
              <rank>19</rank>
            </item>
            <item id="number">
              <rank>20</rank>
            </item>
            <item id="email">
              <rank>30</rank>
            </item>	    
            <item id="type">
              <rank>40</rank>
            </item>
          </items>
        </search>
        <list>
          <items>
            <item id="name">
              <rank>8</rank>
            </item>
            <item id="org_id">
              <rank>9</rank>
            </item>
            <item id="day">
              <rank>10</rank>
            </item>
	    <item id="repeat_until_end_of">
              <rank>15</rank>
            </item>
	    <item id="start_time">
              <rank>16</rank>
            </item>
	    <item id="end_time">
              <rank>17</rank>
            </item>
            <item id="contact_last_name">
              <rank>18</rank>
            </item>
            <item id="contact_first_name">
              <rank>19</rank>
            </item>
            <item id="number">
              <rank>20</rank>
            </item>
            <item id="email">
              <rank>30</rank>
            </item>	    
            <item id="type">
              <rank>40</rank>
            </item>
          </items>
        </list>
      </presentation>
    </class>
    <class id="Model" _delta="must_exist">
      <fields>
	<field id="type" xsi:type="AttributeEnum">
	  <values>
	    <value id="OnCall" _define="define">OnCall</value>
	  </values>
	</field>
      </fields>
    </class>
  </classes>
  <menus>
    <menu id="ConfigManagementOverview" xsi:type="DashboardMenuNode" _delta="must_exist">
	  <definition>
	    <cells>
		  <cell id="2" _delta="must_exist">
		    <dashlets>
			  <dashlet id="99" xsi:type="DashletBadge" _delta="define">
			    <rank>8</rank>
			    <class>OnCall</class>
			  </dashlet>
		    </dashlets>
		  </cell>
	    </cells>
	  </definition>
    </menu>
  </menus>
  <user_rights>
    <groups>
      <group id="OnCallSchedule">
	<classes>
	  <class id="OnCall"/>
	</classes>
      </group>
      <group id="OnCallREST">
	<classes>
	  <class id="OnCall"/>
	  <class id="User"/>	  
	  <class id="Contact"/>	  
	</classes>
      </group>      
    </groups>
    <profiles>
      <profile id="50" _delta="define">
	<name>On Call Scheduler</name>
	<description>
	  A user in charge of assigning employees for oncall. In other words, a user that can create the Functional CI OnCall.
	</description>
	<groups>
	  <group id="OnCallSchedule">
	    <actions>
	      <action id="action:write">allow</action>	    
	      <action id="action:bulk write">allow</action>
	      <action id="action:read">allow</action>	    
	      <action id="action:bulk read">allow</action>
	    </actions>
	  </group>
	</groups>
      </profile>
      <profile id="51" _delta="define">
	<name>On Call REST Client</name>
	<description>
	  A client allowed to read OnCall, User, and URP_UserProfile
	</description>
	<groups>
	  <group id="OnCallREST">
	    <actions>
	      <action id="action:read">allow</action>	    
	      <action id="action:bulk read">allow</action>
	    </actions>
	  </group>
	</groups>
      </profile>
    </profiles>
  </user_rights>
  <dictionaries>
    <dictionary id="EN US">
      <entries>
	<entry id="Class:OnCall/Attribute:last_name" _delta="define">
	  <![CDATA[Last Name]]>
	</entry>
	<entry id="Class:OnCall/Attribute:first_name" _delta="define">
	  <![CDATA[First Name]]>
	</entry>
	<entry id="Class:OnCall/Attribute:email" _delta="define">
	  <![CDATA[Email]]>
	</entry>
	<entry id="Class:OnCall/Attribute:phone" _delta="define">
	  <![CDATA[Phone]]>
	</entry>
	<entry id="Class:OnCall/Attribute:person_external_id" _delta="define">
	  <![CDATA[Person]]>
	</entry>
	<entry id="Class:Error:RepeatUntilEndOfMustBeGreaterThanDay" _delta="define">
	  <![CDATA['The repeat until end of date cannot be before the day date']]>
	</entry>
	<entry id="Class:Error:EndTimeMustBeGreaterThanStartTime" _delta="define">
	  <![CDATA['The end time cannot be before the start time']]>
	</entry>
	<entry id="Class:Error:StartTimeMustBeSameTimeAsEndTime" _delta="define">
	  <![CDATA['The start time date must be must be the same as the end time date']]>
	</entry>
      </entries>
    </dictionary>
  </dictionaries>
</itop_design>
